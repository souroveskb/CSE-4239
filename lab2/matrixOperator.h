/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MATRIXOPERATOR_H_RPCGEN
#define _MATRIXOPERATOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct Matrix {
	int nRows;
	int nColumns;
	float data[1000];
};
typedef struct Matrix Matrix;

struct Input {
	int numOfMatrices;
	Matrix matrices[2];
};
typedef struct Input Input;

struct Output {
	Matrix result;
	int errorCode;
	char errorMessage[50];
};
typedef struct Output Output;

#define MATRIX_OPERATIONS 0x18771877
#define MATRIX_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define add 1
extern  Output * add_1(Input *, CLIENT *);
extern  Output * add_1_svc(Input *, struct svc_req *);
#define multiply 2
extern  Output * multiply_1(Input *, CLIENT *);
extern  Output * multiply_1_svc(Input *, struct svc_req *);
#define inverse 3
extern  Output * inverse_1(Input *, CLIENT *);
extern  Output * inverse_1_svc(Input *, struct svc_req *);
#define transpose 4
extern  Output * transpose_1(Input *, CLIENT *);
extern  Output * transpose_1_svc(Input *, struct svc_req *);
extern int matrix_operations_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define add 1
extern  Output * add_1();
extern  Output * add_1_svc();
#define multiply 2
extern  Output * multiply_1();
extern  Output * multiply_1_svc();
#define inverse 3
extern  Output * inverse_1();
extern  Output * inverse_1_svc();
#define transpose 4
extern  Output * transpose_1();
extern  Output * transpose_1_svc();
extern int matrix_operations_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Matrix (XDR *, Matrix*);
extern  bool_t xdr_Input (XDR *, Input*);
extern  bool_t xdr_Output (XDR *, Output*);

#else /* K&R C */
extern bool_t xdr_Matrix ();
extern bool_t xdr_Input ();
extern bool_t xdr_Output ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MATRIXOPERATOR_H_RPCGEN */
